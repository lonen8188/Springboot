spring.application.name=boardBoot

#  서버 포트 변경
server.port=80

#  마리아 db 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/bootex
spring.datasource.username=bootuser
spring.datasource.password=bootuser

# update : 변경 사항이 생기면 update
# create : 매번 새로 생성
# create-drop : 매번 삭제후 생성
# validate : 엔티티 클래스와 테이블이 정상적으로 매핑되는지만 검사한다. 만약 테이블이 아예 존재하지 않거나, 테이블에 엔티티의 필드에 매핑되는 컬럼이 존재하지 않으면 예외를 발생시키면서 애플리케이션을 종료한다
spring.jpa.hibernate.ddl-auto=update
# 실제 jpa의 구현체인 HiberNate가 동작하면서 발생하는 sql을 포멧팅해서 콘솔에 출력
spring.jpa.properties.hibernate.format_sql=true
# 콘솔에 실행한 쿼리문(sql) 보여줄 것인지 결정
spring.jpa.show-sql=true

# 프로젝트 변경 후에 만들어진 결과를 보관(캐싱)하지 않도록 설정
spring.thymeleaf.cache=false

#파일 업로드 처리용 코드
#파일 업로드 가능 여부
spring.servlet.multipart.enabled=true 
#파일 업로드 경로
spring.servlet.multipart.location=C:\\upload
#파일 한번에 최대 업로드 용량
spring.servlet.multipart.max-request-size=30MB
#단일 파일 업로드 최대 크기
spring.servlet.multipart.max-file-size=10MB

## 파일 업로드 위치 경로  (@Value로 사용)
org.zerock.upload.path =C:\\upload
